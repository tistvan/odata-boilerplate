{
  "openapi": "3.0.0",
  "info": {
    "title": "Service for namespace Model",
    "version": "",
    "description": "This service is located at [http://localhost/service-root/](http://localhost/service-root/)"
  },
  "servers": [
    {
      "url": "/odata.svc"
    }
  ],
  "tags": [
    {
      "name": "Members"
    },
    {
      "name": "Member2s"
    }
  ],
  "paths": {
    "/Members": {
      "get": {
        "summary": "Get entities from Members",
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "FirstName",
                  "FirstName desc",
                  "Id",
                  "Id desc",
                  "LastName",
                  "LastName desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "FirstName",
                  "Id",
                  "LastName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Wrapper",
                  "type": "object",
                  "properties": {
                    "d": {
                      "title": "Collection of Member",
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Model.Member"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Members",
        "tags": [
          "Members"
        ],
        "requestBody": {
          "required": true,
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model.Member-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Member",
                  "type": "object",
                  "properties": {
                    "d": {
                      "$ref": "#/components/schemas/Model.Member"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Members({Id})": {
      "get": {
        "summary": "Get entity from Members by key",
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "key: Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "FirstName",
                  "Id",
                  "LastName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Member",
                  "type": "object",
                  "properties": {
                    "d": {
                      "$ref": "#/components/schemas/Model.Member"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update entity in Members",
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "key: Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "title": "Modified Member",
                "type": "object",
                "properties": {
                  "d": {
                    "$ref": "#/components/schemas/Model.Member-update"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Members",
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "key: Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Member2s": {
      "get": {
        "summary": "Get entities from Member2s",
        "tags": [
          "Member2s"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Asdf",
                  "Asdf desc",
                  "FirstName",
                  "FirstName desc",
                  "Id",
                  "Id desc",
                  "LastName",
                  "LastName desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Asdf",
                  "FirstName",
                  "Id",
                  "LastName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Wrapper",
                  "type": "object",
                  "properties": {
                    "d": {
                      "title": "Collection of Member2",
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Model.Member2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Add new entity to Member2s",
        "tags": [
          "Member2s"
        ],
        "requestBody": {
          "required": true,
          "description": "New entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Model.Member2-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Member2",
                  "type": "object",
                  "properties": {
                    "d": {
                      "$ref": "#/components/schemas/Model.Member2"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Member2s({Id})": {
      "get": {
        "summary": "Get entity from Member2s by key",
        "tags": [
          "Member2s"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "key: Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "Asdf",
                  "FirstName",
                  "Id",
                  "LastName"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Member2",
                  "type": "object",
                  "properties": {
                    "d": {
                      "$ref": "#/components/schemas/Model.Member2"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Update entity in Member2s",
        "tags": [
          "Member2s"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "key: Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "New property values",
          "content": {
            "application/json": {
              "schema": {
                "title": "Modified Member2",
                "type": "object",
                "properties": {
                  "d": {
                    "$ref": "#/components/schemas/Model.Member2-update"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Delete entity from Member2s",
        "tags": [
          "Member2s"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "key: Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "ETag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/$batch": {
      "post": {
        "summary": "Send a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Members HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "202": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Model.Member": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true,
            "title": "First Name",
            "description": "First Name"
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "LastName": {
            "type": "string",
            "nullable": true,
            "title": "Last Name",
            "description": "Last Name"
          }
        },
        "title": "Member"
      },
      "Model.Member-create": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true,
            "title": "First Name",
            "description": "First Name"
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "Id"
        ],
        "title": "Member (for create)"
      },
      "Model.Member-update": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true,
            "title": "First Name",
            "description": "First Name"
          }
        },
        "title": "Member (for update)"
      },
      "Model.Member2": {
        "type": "object",
        "properties": {
          "Asdf": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "LastName": {
            "type": "string",
            "nullable": true
          }
        },
        "title": "Member2"
      },
      "Model.Member2-create": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "Id"
        ],
        "title": "Member2 (for create)"
      },
      "Model.Member2-update": {
        "type": "object",
        "properties": {
          "FirstName": {
            "type": "string",
            "nullable": true
          }
        },
        "title": "Member2 (for update)"
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "object",
                "required": [
                  "lang",
                  "value"
                ],
                "properties": {
                  "lang": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$inlinecount",
        "in": "query",
        "description": "Include count of items, see [Count](http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#InlinecountSystemQueryOption)",
        "schema": {
          "type": "string",
          "enum": [
            "allpages",
            "none"
          ]
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}